{"ast":null,"code":"var _jsxFileName = \"/home/wsz/meteo/src/components/Search.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport \"../App.css\";\nimport dayjs from \"dayjs\";\nimport kc from \"./kelvinToCelcius\";\nconst api = \"d929b80c2587abdc6dbda7f96c9ff6c5\"; ////////////////////////////\n\nclass Weather {\n  constructor(temp, weather, date, icon) {\n    this.date = date;\n    this.temp = temp;\n    this.weather = weather;\n    this.icon = icon;\n  }\n\n} ///////////////////////////\n\n\nfunction Search(props) {\n  const [data, setData] = useState(\"\");\n  const [data2, setData2] = useState(\"\");\n  const [data3, setData3] = useState(\"\"); //////////////////////////\n\n  let forecastDaily = [];\n  let test = [];\n  let forecastHourly = [];\n  let x = 0;\n  let y = 0; //////////////////////////\n\n  function keyPress(a) {\n    if (a.key === \"Enter\") {\n      const cityValue = a.target.value; // Fetch to get longitutde and latitude to use with second API - Translate String to coordinates\n\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityValue}&appid=${api}`).then(response => response.json()).then(data => {\n        // Fetching weather data with coordinates - Current - Forecast\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${data.coord.lat}&lon=${data.coord.lon}&appid=${api}`).then(response => response.json()).then(data => {\n          data.daily.forEach(element => {\n            forecastDaily[x] = element.weather[0].main + \" \";\n            x++;\n          });\n          x = 0;\n          const date = new Date();\n          console.log(date.getDay());\n          data.daily.forEach(element => {\n            test[x] = new Weather(kc(element.temp.day), element.weather[0].main + \" \", dayjs().add(x, \"day\").format(\"dddd DD/MM\"), element.weather[0].icon);\n            x++;\n          });\n          setData3(test.map(a => /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }\n          }, a.date, \" / \", a.temp, \" / \", a.weather)));\n          console.log(test);\n          data.hourly.forEach(element => {\n            forecastHourly[y] = kc(element.temp) + \" \";\n            y++;\n          });\n          setData(forecastDaily);\n          setData2(forecastHourly);\n          console.log(test);\n          console.log(data3);\n        });\n      }).catch(error => {\n        console.log(\"error\");\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: keyPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bgYellow textBlack0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bgRed textWhite1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Today\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bgGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"Daily Forecast : \", data), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bgOrange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"Hourly Forecast : \", data2), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bgGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, data3), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bgOrange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, data2));\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/wsz/meteo/src/components/Search.js"],"names":["React","useState","dayjs","kc","api","Weather","constructor","temp","weather","date","icon","Search","props","data","setData","data2","setData2","data3","setData3","forecastDaily","test","forecastHourly","x","y","keyPress","a","key","cityValue","target","value","fetch","then","response","json","coord","lat","lon","daily","forEach","element","main","Date","console","log","getDay","day","add","format","map","hourly","catch","error"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport \"../App.css\";\nimport dayjs from \"dayjs\";\nimport kc from \"./kelvinToCelcius\";\n\nconst api = \"d929b80c2587abdc6dbda7f96c9ff6c5\";\n\n////////////////////////////\n\nclass Weather {\n  constructor(temp, weather, date, icon) {\n    this.date = date;\n    this.temp = temp;\n    this.weather = weather;\n    this.icon = icon;\n  }\n}\n///////////////////////////\n\nfunction Search(props) {\n  const [data, setData] = useState(\"\");\n  const [data2, setData2] = useState(\"\");\n  const [data3, setData3] = useState(\"\");\n\n  //////////////////////////\n\n  let forecastDaily = [];\n  let test = [];\n  let forecastHourly = [];\n\nlet x = 0\nlet y = 0\n  //////////////////////////\n\n  function keyPress(a) {\n    if (a.key === \"Enter\") {\n      const cityValue = a.target.value;\n      // Fetch to get longitutde and latitude to use with second API - Translate String to coordinates\n      fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${cityValue}&appid=${api}`\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          // Fetching weather data with coordinates - Current - Forecast\n          fetch(\n            `https://api.openweathermap.org/data/2.5/onecall?lat=${data.coord.lat}&lon=${data.coord.lon}&appid=${api}`\n          )\n            .then((response) => response.json())\n            .then((data) => {\n              \n\n              data.daily.forEach((element) => {\n                forecastDaily[x] = element.weather[0].main + \" \";\n                x++;\n              });\n              x = 0;\n              const date = new Date();\n              console.log(date.getDay());\n\n              data.daily.forEach((element) => {\n                test[x] = new Weather(\n                  kc(element.temp.day),\n                  element.weather[0].main + \" \",\n                  dayjs().add(x, \"day\").format(\"dddd DD/MM\"),\n                  element.weather[0].icon\n                );\n                x++;\n              });\n\n              setData3(\n                test.map((a) => (\n                  <li>\n                    {a.date} / {a.temp} / {a.weather}\n                  </li>\n                ))\n              );\n\n              console.log(test);\n\n              data.hourly.forEach((element) => {\n                forecastHourly[y] = kc(element.temp) + \" \";\n                y++;\n              });\n\n              setData(forecastDaily);\n              setData2(forecastHourly);\n              console.log(test);\n              console.log(data3);\n            });\n        })\n\n        .catch((error) => {\n          console.log(\"error\");\n        });\n    }\n  }\n\n  return (\n    <div>\n      <input onKeyPress={keyPress} />\n\n      <div className=\"bgYellow textBlack0\">\n        <div className=\"bgRed textWhite1\">Today</div>\n      </div>\n      <div className=\"bgGreen\">Daily Forecast : {data}</div>\n      <div className=\"bgOrange\">Hourly Forecast : {data2}</div>\n\n      <div className=\"bgGreen\">{data3}</div>\n      <div className=\"bgOrange\">{data2}</div>\n    </div>\n  );\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}