{"ast":null,"code":"var _jsxFileName = \"/home/wsz/meteo/src/components/Search.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport \"../App.css\";\nimport dayjs from \"dayjs\";\nimport kc from \"./kelvinToCelcius\";\nconst api = \"d929b80c2587abdc6dbda7f96c9ff6c5\"; ////////////////////////////\n\nclass Weather {\n  constructor(temp, weather, date, icon) {\n    this.date = date;\n    this.temp = temp;\n    this.weather = weather;\n    this.icon = icon;\n  }\n\n} ///////////////////////////\n\n\nfunction Search(props) {\n  const [currentState, setCurrentState] = useState(\"\");\n  const [forecastHourlyState, setForecastHourlyState] = useState(\"\");\n  const [forecastDailyState, setForecastDailyState] = useState(\"\");\n  const [errorState, setErrorState] = useState(\"\");\n  const [name, setName] = useState(\"\"); //////////////////////////\n\n  let current = \"\";\n  let forecastDaily = [];\n  let forecastHourly = [];\n  let x = 0;\n  let y = 0; //////////////////////////\n\n  function keyPress(a) {\n    if (a.key === \"Enter\") {\n      setErrorState(\"\");\n      const date = new Date();\n      const cityValue = a.target.value; // Fetch to get longitutde and latitude to use with second API - Translate String to coordinates\n\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityValue}&appid=${api}`).then(response => response.json()).then(data => {\n        setName(data.name); // Fetching weather data with coordinates - Current - Forecast\n\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${data.coord.lat}&lon=${data.coord.lon}&appid=${api}`).then(response => response.json()).then(data => {\n          console.log(date.getDay()); //////////////////////////\n\n          data.daily.forEach(element => {\n            forecastDaily[x] = new Weather(kc(element.temp.day), element.weather[0].main + \" \", dayjs().add(x, \"day\").format(\"dddd DD/MM\"), element.weather[0].icon);\n            x++;\n          });\n          setForecastDailyState(forecastDaily.map(a => /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }\n          }, a.date, \" / \", a.temp, \"\\xB0C / \", a.weather))); //////////////////////////\n\n          x = 0;\n          data.hourly.forEach(element => {\n            forecastHourly[x] = new Weather(kc(element.temp), element.weather[0].main + \" \", `H + ${x} : `, element.weather[0].icon);\n            x++;\n          });\n          setForecastHourlyState(forecastHourly.map(a => /*#__PURE__*/React.createElement(\"div\", {\n            className: \"flex\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }\n          }, a.date), /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 21\n            }\n          }, a.temp, \"\\xB0C \"), /*#__PURE__*/React.createElement(\"img\", {\n            src: \"http://openweathermap.org/img/wn/\" + a.icon + \".png\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }\n          }))));\n          data.hourly.forEach(element => {\n            forecastHourly[y] = kc(element.temp) + \" \";\n            y++;\n          });\n          x = 0;\n          const icon = data.current.weather[0].icon;\n          const iconURL = ` http://openweathermap.org/img/wn/${icon}@2x.png`; //////////////////////////\n\n          console.log(data);\n          setCurrentState( /*#__PURE__*/React.createElement(\"div\", {\n            className: \"flex column jcc aic\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }\n          }, kc(data.current.temp), \"\\xB0C\"), /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }\n          }, data.current.weather[0].main), /*#__PURE__*/React.createElement(\"img\", {\n            src: iconURL,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }\n          })));\n        });\n      }) //////////////////////////\n      .catch(error => {\n        console.log(\"error\");\n        setErrorState(\"City name does not exist\");\n        setCurrentState(\"\");\n        setForecastDailyState(\"\");\n        setForecastHourlyState(\"\");\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textS h100 w100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: keyPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h50 w100 r flex jcc aic column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" textXL textWhite0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textXL textWhite1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, currentState), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textRed bgWhite2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, errorState)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textBlack0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bgRuby textWhite1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, \"Today\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bgRed textWhite1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, currentState)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bgGrass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, \"Daily Forecast\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bgGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, forecastDailyState)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bgDusk\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, \"Hourly Forecast\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bgOrange overflowHidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, forecastHourlyState)));\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/wsz/meteo/src/components/Search.js"],"names":["React","useState","dayjs","kc","api","Weather","constructor","temp","weather","date","icon","Search","props","currentState","setCurrentState","forecastHourlyState","setForecastHourlyState","forecastDailyState","setForecastDailyState","errorState","setErrorState","name","setName","current","forecastDaily","forecastHourly","x","y","keyPress","a","key","Date","cityValue","target","value","fetch","then","response","json","data","coord","lat","lon","console","log","getDay","daily","forEach","element","day","main","add","format","map","hourly","iconURL","catch","error"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport \"../App.css\";\nimport dayjs from \"dayjs\";\n\nimport kc from \"./kelvinToCelcius\";\n\nconst api = \"d929b80c2587abdc6dbda7f96c9ff6c5\";\n\n////////////////////////////\n\nclass Weather {\n  constructor(temp, weather, date, icon) {\n    this.date = date;\n    this.temp = temp;\n    this.weather = weather;\n    this.icon = icon;\n  }\n}\n///////////////////////////\n\nfunction Search(props) {\n  const [currentState, setCurrentState] = useState(\"\");\n  const [forecastHourlyState, setForecastHourlyState] = useState(\"\");\n  const [forecastDailyState, setForecastDailyState] = useState(\"\");\n  const [errorState, setErrorState] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  //////////////////////////\n  let current = \"\";\n  let forecastDaily = [];\n  let forecastHourly = [];\n\n  let x = 0;\n  let y = 0;\n  //////////////////////////\n\n  function keyPress(a) {\n    if (a.key === \"Enter\") {\n      setErrorState(\"\");\n      const date = new Date();\n      const cityValue = a.target.value;\n      // Fetch to get longitutde and latitude to use with second API - Translate String to coordinates\n      fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${cityValue}&appid=${api}`\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          setName(data.name);\n\n          // Fetching weather data with coordinates - Current - Forecast\n          fetch(\n            `https://api.openweathermap.org/data/2.5/onecall?lat=${data.coord.lat}&lon=${data.coord.lon}&appid=${api}`\n          )\n            .then((response) => response.json())\n            .then((data) => {\n              console.log(date.getDay());\n\n              //////////////////////////\n\n              data.daily.forEach((element) => {\n                forecastDaily[x] = new Weather(\n                  kc(element.temp.day),\n                  element.weather[0].main + \" \",\n                  dayjs().add(x, \"day\").format(\"dddd DD/MM\"),\n                  element.weather[0].icon\n                );\n                x++;\n              });\n\n              setForecastDailyState(\n                forecastDaily.map((a) => (\n                  <div>\n                    {a.date} / {a.temp}°C / {a.weather}\n                  </div>\n                ))\n              );\n\n              //////////////////////////\n\n              x = 0;\n\n              data.hourly.forEach((element) => {\n                forecastHourly[x] = new Weather(\n                  kc(element.temp),\n                  element.weather[0].main + \" \",\n                  `H + ${x} : `,\n                  element.weather[0].icon\n                );\n                x++;\n              });\n\n              setForecastHourlyState(\n                forecastHourly.map((a) => (\n                  <div className=\"flex\">\n                    <div>{a.date}</div>\n                    <div>{a.temp}°C </div>\n                  {/*  <div>{a.weather}</div> */}\n                  <img src={\"http://openweathermap.org/img/wn/\"+a.icon+\".png\"}></img>\n                  </div>\n                ))\n              );\n\n              data.hourly.forEach((element) => {\n                forecastHourly[y] = kc(element.temp) + \" \";\n                y++;\n              });\n              x = 0;\n\n\n              const icon = data.current.weather[0].icon\n              const iconURL = ` http://openweathermap.org/img/wn/${icon}@2x.png`\n              //////////////////////////\n              console.log(data);\n              setCurrentState(\n                <div className=\"flex column jcc aic\">\n                  <br />\n                  <div>{kc(data.current.temp)}°C</div>\n                  <div>{data.current.weather[0].main}</div>\n                  <img src={iconURL}></img>\n                </div>\n              );\n            });\n        })\n        //////////////////////////\n\n        .catch((error) => {\n          console.log(\"error\");\n          setErrorState(\"City name does not exist\");\n          setCurrentState(\"\");\n          setForecastDailyState(\"\");\n          setForecastHourlyState(\"\");\n        });\n    }\n  }\n\n  return (\n    <div className=\"textS h100 w100\">\n      <input onKeyPress={keyPress} />\n\n      <div className=\"h50 w100 r flex jcc aic column\">\n        <div className=\" textXL textWhite0\">{name}</div>\n        <div className=\"textXL textWhite1\">{currentState}</div>\n        <div className=\"textRed bgWhite2\">{errorState}</div>\n      </div>\n\n      <div className=\"textBlack0\">\n        <div className=\"bgRuby textWhite1\">Today</div>\n        <div className=\"bgRed textWhite1\">{currentState}</div>\n      </div>\n\n      <div>\n        <div className=\"bgGrass\">Daily Forecast</div>\n        <div className=\"bgGreen\">{forecastDailyState}</div>\n      </div>\n      <div>\n        <div className=\"bgDusk\">Hourly Forecast</div>\n        <div className=\"bgOrange overflowHidden\">{forecastHourlyState}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}