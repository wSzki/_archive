{"ast":null,"code":"var _jsxFileName = \"/home/wsz/meteo/src/App.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Search from \"./components/Search\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav\";\nimport About from \"./components/About\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA3Ic_xoVsarIqel7QDl4vWr5pAUWFclLM\",\n  authDomain: \"react-33622.firebaseapp.com\",\n  databaseURL: \"https://react-33622.firebaseio.com\",\n  projectId: \"react-33622\",\n  storageBucket: \"react-33622.appspot.com\",\n  messagingSenderId: \"820375977285\",\n  appId: \"1:820375977285:web:c5553caf632ba5ad8f122c\"\n};\nvar uiConfig = {\n  callbacks: {\n    signInSuccessWithAuthResult: function (authResult, redirectUrl) {\n      // User successfully signed in.\n      // Return type determines whether we continue the redirect automatically\n      // or whether we leave that to developer to handle.\n      return true;\n    },\n    uiShown: function () {\n      // The widget is rendered.\n      // Hide the loader.\n      document.getElementById('loader').style.display = 'none';\n    }\n  },\n  // Will use popup for IDP Providers sign-in flow instead of the default, redirect.\n  signInFlow: 'popup',\n  signInSuccessUrl: '<url-to-redirect-to-on-success>',\n  signInOptions: [// Leave the lines as is for the providers you want to offer your users.\n  firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.FacebookAuthProvider.PROVIDER_ID, firebase.auth.TwitterAuthProvider.PROVIDER_ID, firebase.auth.GithubAuthProvider.PROVIDER_ID, firebase.auth.EmailAuthProvider.PROVIDER_ID, firebase.auth.PhoneAuthProvider.PROVIDER_ID],\n  // Terms of service url.\n  tosUrl: '<your-tos-url>',\n  // Privacy policy url.\n  privacyPolicyUrl: '<your-privacy-policy-url>'\n};\n\nvar firebase = require('firebase');\n\nvar firebaseui = require('firebaseui'); // Initialize the FirebaseUI Widget using Firebase.\n\n\nvar ui = new firebaseui.auth.AuthUI(firebase.auth());\nui.start('#firebaseui-auth-container', {\n  signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID] // Other config options...\n\n});\n\nclass App extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App  bgBlack1 h100 textWhite1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" overflowAuto h100 flex jcc column aic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"firebaseui-auth-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Search, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/wsz/meteo/src/App.js"],"names":["React","useState","Search","Nav","About","BrowserRouter","Router","Switch","Route","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","uiConfig","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","uiShown","document","getElementById","style","display","signInFlow","signInSuccessUrl","signInOptions","firebase","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","TwitterAuthProvider","GithubAuthProvider","EmailAuthProvider","PhoneAuthProvider","tosUrl","privacyPolicyUrl","require","firebaseui","ui","AuthUI","start","App","Component","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,6BAFS;AAGrBC,EAAAA,WAAW,EAAE,oCAHQ;AAIrBC,EAAAA,SAAS,EAAE,aAJU;AAKrBC,EAAAA,aAAa,EAAE,yBALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE;AAPc,CAAvB;AASA,IAAIC,QAAQ,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,2BAA2B,EAAE,UAASC,UAAT,EAAqBC,WAArB,EAAkC;AAC7D;AACA;AACA;AACA,aAAO,IAAP;AACD,KANQ;AAOTC,IAAAA,OAAO,EAAE,YAAW;AAClB;AACA;AACAC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC,CAAwCC,OAAxC,GAAkD,MAAlD;AACD;AAXQ,GADE;AAcb;AACAC,EAAAA,UAAU,EAAE,OAfC;AAgBbC,EAAAA,gBAAgB,EAAE,iCAhBL;AAiBbC,EAAAA,aAAa,EAAE,CACb;AACAC,EAAAA,QAAQ,CAACC,IAAT,CAAcC,kBAAd,CAAiCC,WAFpB,EAGbH,QAAQ,CAACC,IAAT,CAAcG,oBAAd,CAAmCD,WAHtB,EAIbH,QAAQ,CAACC,IAAT,CAAcI,mBAAd,CAAkCF,WAJrB,EAKbH,QAAQ,CAACC,IAAT,CAAcK,kBAAd,CAAiCH,WALpB,EAMbH,QAAQ,CAACC,IAAT,CAAcM,iBAAd,CAAgCJ,WANnB,EAObH,QAAQ,CAACC,IAAT,CAAcO,iBAAd,CAAgCL,WAPnB,CAjBF;AA0Bb;AACAM,EAAAA,MAAM,EAAE,gBA3BK;AA4Bb;AACAC,EAAAA,gBAAgB,EAAE;AA7BL,CAAf;;AAgCA,IAAIV,QAAQ,GAAGW,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,YAAD,CAAxB,C,CAEA;;;AACA,IAAIE,EAAE,GAAG,IAAID,UAAU,CAACX,IAAX,CAAgBa,MAApB,CAA2Bd,QAAQ,CAACC,IAAT,EAA3B,CAAT;AAEAY,EAAE,CAACE,KAAH,CAAS,4BAAT,EAAuC;AACrChB,EAAAA,aAAa,EAAE,CACbC,QAAQ,CAACC,IAAT,CAAcM,iBAAd,CAAgCJ,WADnB,CADsB,CAIrC;;AAJqC,CAAvC;;AAQA,MAAMa,GAAN,SAAkB9C,KAAK,CAAC+C,SAAxB,CAAkC;AAChCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,EAAE,EAAC,2BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AAQD;;AAV+B;;AAalC,eAAeF,GAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport Search from \"./components/Search\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav\";\nimport About from \"./components/About\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA3Ic_xoVsarIqel7QDl4vWr5pAUWFclLM\",\n  authDomain: \"react-33622.firebaseapp.com\",\n  databaseURL: \"https://react-33622.firebaseio.com\",\n  projectId: \"react-33622\",\n  storageBucket: \"react-33622.appspot.com\",\n  messagingSenderId: \"820375977285\",\n  appId: \"1:820375977285:web:c5553caf632ba5ad8f122c\"\n};\nvar uiConfig = {\n  callbacks: {\n    signInSuccessWithAuthResult: function(authResult, redirectUrl) {\n      // User successfully signed in.\n      // Return type determines whether we continue the redirect automatically\n      // or whether we leave that to developer to handle.\n      return true;\n    },\n    uiShown: function() {\n      // The widget is rendered.\n      // Hide the loader.\n      document.getElementById('loader').style.display = 'none';\n    }\n  },\n  // Will use popup for IDP Providers sign-in flow instead of the default, redirect.\n  signInFlow: 'popup',\n  signInSuccessUrl: '<url-to-redirect-to-on-success>',\n  signInOptions: [\n    // Leave the lines as is for the providers you want to offer your users.\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n    firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n    firebase.auth.GithubAuthProvider.PROVIDER_ID,\n    firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    firebase.auth.PhoneAuthProvider.PROVIDER_ID\n  ],\n  // Terms of service url.\n  tosUrl: '<your-tos-url>',\n  // Privacy policy url.\n  privacyPolicyUrl: '<your-privacy-policy-url>'\n};\n\nvar firebase = require('firebase');\nvar firebaseui = require('firebaseui');\n\n// Initialize the FirebaseUI Widget using Firebase.\nvar ui = new firebaseui.auth.AuthUI(firebase.auth());\n\nui.start('#firebaseui-auth-container', {\n  signInOptions: [\n    firebase.auth.EmailAuthProvider.PROVIDER_ID\n  ],\n  // Other config options...\n});\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App  bgBlack1 h100 textWhite1\">\n        <div className=\" overflowAuto h100 flex jcc column aic\">\n        <div id=\"firebaseui-auth-container\"></div>\n          <Search/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}