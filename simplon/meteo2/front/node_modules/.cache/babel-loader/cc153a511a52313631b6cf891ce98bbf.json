{"ast":null,"code":"var _jsxFileName = \"/home/wsz/tem/src/components/Search.js\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport dayjs from \"dayjs\";\nimport Clock from \"react-clock\";\nimport kc from \"./kelvinToCelcius\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nconst api = \"d929b80c2587abdc6dbda7f96c9ff6c5\"; ////////////////////////////\n\nclass Weather {\n  constructor(temp, weather, date, icon) {\n    this.date = date;\n    this.temp = temp;\n    this.weather = weather;\n    this.icon = icon;\n  }\n\n} ///////////////////////////\n\n\nfunction Search(props) {\n  const [currentState, setCurrentState] = useState(\"\");\n  const [forecastHourlyState, setForecastHourlyState] = useState(\"\");\n  const [forecastDailyState, setForecastDailyState] = useState(\"\");\n  const [errorState, setErrorState] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n  let forecastDaily = [];\n  let forecastHourly = [];\n  let x = 0;\n  let y = 0;\n  useEffect(() => {\n    if (name === \"\") keyPress({\n      key: \"Enter\",\n      target: {\n        value: \"Paris\"\n      }\n    });\n  }); //////////////////////////\n\n  function keyPress(a) {\n    if (a.key === \"Enter\") {\n      setErrorState(\"\");\n      const date = new Date();\n      const cityValue = a.target.value;\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityValue}&appid=${api}` // Fetch to get longitutde and latitude to use with second API - Translate String to coordinates\n      ).then(response => response.json()).then(data => {\n        setName(data.name); // Fetching weather data with coordinates - Current - Forecast\n\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${data.coord.lat}&lon=${data.coord.lon}&appid=${api}`).then(response => response.json()).then(data => {\n          console.log(date.getDay()); //////////////////////////\n\n          data.daily.forEach(element => {\n            forecastDaily[x] = new Weather(kc(element.temp.day), element.weather[0].main + \" \", dayjs().add(x, \"day\").format(\"ddd DD/MM\"), element.weather[0].icon);\n            x++;\n          });\n          setForecastDailyState(forecastDaily.map(a => /*#__PURE__*/React.createElement(\"div\", {\n            className: \"flex  column jcc aic w20\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }\n          }, a.date), /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }\n          }, a.temp, \"\\xB0C \"), /*#__PURE__*/React.createElement(\"img\", {\n            className: \"h50\",\n            src: \"http://openweathermap.org/img/wn/\" + a.icon + \"@2x.png\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 21\n            }\n          })))); //////////////////////////\n\n          x = 0;\n          const event = new Date();\n          y = 0;\n          data.hourly.forEach(element => {\n            forecastHourly[x] = new Weather(kc(element.temp), element.weather[0].main + \" \", new Date().getHours() + y + \"h00\", element.weather[0].icon);\n            console.log();\n            x++;\n            y++;\n\n            if (event.getHours() + y === 24) {\n              y = 0 - event.getHours();\n            }\n          });\n          setForecastHourlyState(forecastHourly.map(a => /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 21\n            }\n          }, a.date), /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 21\n            }\n          }, a.temp, \"\\xB0C \"), /*#__PURE__*/React.createElement(\"img\", {\n            className: \"h50\",\n            src: \"http://openweathermap.org/img/wn/\" + a.icon + \"@2x.png\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 21\n            }\n          }))));\n          y = 0;\n          data.hourly.forEach(element => {\n            forecastHourly[y] = kc(element.temp) + \" \";\n            y++;\n          });\n          x = 0;\n          const icon = data.current.weather[0].icon;\n          const iconURL = ` http://openweathermap.org/img/wn/${icon}@2x.png`; //////////////////////////\n\n          console.log(data);\n          setCurrentState( /*#__PURE__*/React.createElement(\"div\", {\n            className: \"flex column jcc aic\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }\n          }, kc(data.current.temp), \"\\xB0C\"), /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }\n          }, data.current.weather[0].main), /*#__PURE__*/React.createElement(\"img\", {\n            src: iconURL,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }\n          })));\n        });\n      }) //////////////////////////\n      .catch(error => {\n        console.log(\"error\");\n        setErrorState(\"City name does not exist\");\n        setCurrentState(\"\");\n        setForecastDailyState(\"\");\n        setForecastHourlyState(\"\");\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textS h100 w100 overflowAuto flex column aic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"10px\"\n    },\n    className: \"flex w100 jcc \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: keyPress,\n    className: \" flex jcc aic tac w50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"10px\"\n    },\n    className: \"h33   w100 flex jcc  aic column \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" textXL textWhite0 p10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textXL textWhite1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, currentState), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textRed bgWhite2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, errorState)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w100 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginVertical: \"10px\"\n    },\n    className: \"bgGreen flex row  overflowAuto jcsa \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, forecastDailyState)), /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, \"1\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, \"2\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, \"3\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, \"4\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, \"5\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, \"6\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginVertical: \"10px\"\n    },\n    className: \"bgOrange flex row wrap jcsa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, forecastHourlyState)));\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/wsz/tem/src/components/Search.js"],"names":["React","useState","useEffect","dayjs","Clock","kc","Slider","api","Weather","constructor","temp","weather","date","icon","Search","props","currentState","setCurrentState","forecastHourlyState","setForecastHourlyState","forecastDailyState","setForecastDailyState","errorState","setErrorState","name","setName","settings","dots","infinite","speed","slidesToShow","slidesToScroll","forecastDaily","forecastHourly","x","y","keyPress","key","target","value","a","Date","cityValue","fetch","then","response","json","data","coord","lat","lon","console","log","getDay","daily","forEach","element","day","main","add","format","map","event","hourly","getHours","current","iconURL","catch","error","margin","marginVertical"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport dayjs from \"dayjs\";\nimport Clock from \"react-clock\";\nimport kc from \"./kelvinToCelcius\";\n\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\n\n\nconst api = \"d929b80c2587abdc6dbda7f96c9ff6c5\";\n\n////////////////////////////\n\nclass Weather {\n  constructor(temp, weather, date, icon) {\n    this.date = date;\n    this.temp = temp;\n    this.weather = weather;\n    this.icon = icon;\n  }\n}\n\n///////////////////////////\n\nfunction Search(props) {\n  const [currentState, setCurrentState] = useState(\"\");\n  const [forecastHourlyState, setForecastHourlyState] = useState(\"\");\n  const [forecastDailyState, setForecastDailyState] = useState(\"\");\n  const [errorState, setErrorState] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n  \n\n  let forecastDaily = [];\n  let forecastHourly = [];\n\n  let x = 0;\n  let y = 0;\n\n  useEffect(() => {\n    if (name === \"\") keyPress({ key: \"Enter\", target: { value: \"Paris\" } })\n  });\n\n\n\n  //////////////////////////\n\n  function keyPress(a) {\n    if (a.key === \"Enter\") {\n      setErrorState(\"\");\n      const date = new Date();\n      const cityValue = a.target.value;\n      fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${cityValue}&appid=${api}` // Fetch to get longitutde and latitude to use with second API - Translate String to coordinates\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          setName(data.name);\n          // Fetching weather data with coordinates - Current - Forecast\n          fetch(\n            `https://api.openweathermap.org/data/2.5/onecall?lat=${data.coord.lat}&lon=${data.coord.lon}&appid=${api}`\n          )\n            .then((response) => response.json())\n            .then((data) => {\n              console.log(date.getDay());\n\n              //////////////////////////\n\n              data.daily.forEach((element) => {\n                forecastDaily[x] = new Weather(\n                  kc(element.temp.day),\n                  element.weather[0].main + \" \",\n                  dayjs().add(x, \"day\").format(\"ddd DD/MM\"),\n                  element.weather[0].icon\n                );\n                x++;\n              });\n\n              setForecastDailyState(\n                forecastDaily.map((a) => (\n                  <div className=\"flex  column jcc aic w20\" >\n                    <div>{a.date}</div>\n                    <div>{a.temp}°C </div>\n                    {/*  <div>{a.weather}</div> */}\n                    <img\n                      className=\"h50\"\n                      src={\n                        \"http://openweathermap.org/img/wn/\" + a.icon + \"@2x.png\"\n                      }\n                    ></img>\n                  </div>\n                ))\n              );\n\n              //////////////////////////\n\n              x = 0;\n\n              const event = new Date();\n\n              y = 0;\n              data.hourly.forEach((element) => {\n                forecastHourly[x] = new Weather(\n                  kc(element.temp),\n                  element.weather[0].main + \" \",\n                  new Date().getHours() + y + \"h00\",\n                  element.weather[0].icon\n                );\n                console.log();\n                x++;\n                y++;\n                if (event.getHours() + y === 24) {\n                  y = 0 - event.getHours();\n                }\n              });\n\n              setForecastHourlyState(\n                forecastHourly.map((a) => (\n                  <div >\n                    <div>{a.date}</div>\n                    <div>{a.temp}°C </div>\n                    {/*  <div>{a.weather}</div> */}\n                    <img\n                      className=\"h50\"\n                      src={\n                        \"http://openweathermap.org/img/wn/\" + a.icon + \"@2x.png\"\n                      }\n                    ></img>\n                  </div>\n                ))\n              );\n              y = 0;\n              data.hourly.forEach((element) => {\n                forecastHourly[y] = kc(element.temp) + \" \";\n                y++;\n              });\n              x = 0;\n\n              const icon = data.current.weather[0].icon;\n              const iconURL = ` http://openweathermap.org/img/wn/${icon}@2x.png`;\n              //////////////////////////\n              console.log(data);\n              setCurrentState(\n                <div className=\"flex column jcc aic\">\n                  <br />\n                  <div>{kc(data.current.temp)}°C</div>\n                  <div>{data.current.weather[0].main}</div>\n                  <img src={iconURL}></img>\n                </div>\n              );\n            });\n        })\n        //////////////////////////\n\n        .catch((error) => {\n          console.log(\"error\");\n          setErrorState(\"City name does not exist\");\n          setCurrentState(\"\");\n          setForecastDailyState(\"\");\n          setForecastHourlyState(\"\");\n        });\n    }\n\n  }\n\n  return (\n\n\n    <div className=\"textS h100 w100 overflowAuto flex column aic\">\n      <div style={{ margin: \"10px\" }} className=\"flex w100 jcc \">\n        <input onKeyPress={keyPress} className=\" flex jcc aic tac w50\" />\n      </div>\n      <div style={{ margin: \"10px\" }} className=\"h33   w100 flex jcc  aic column \">\n        <div className=\" textXL textWhite0 p10\">{name}</div>\n        <div className=\"textXL textWhite1\">{currentState}</div>\n        <div className=\"textRed bgWhite2\">{errorState}</div>\n      </div>\n\n      <div className=\"w100 \">\n        <Slider {...settings}>\n          <div style={{ marginVertical: \"10px\" }} className=\"bgGreen flex row  overflowAuto jcsa \" >{forecastDailyState}</div>\n        </Slider>\n              <Slider {...settings}>\n        <div>\n          <h3>1</h3>\n        </div>\n        <div>\n          <h3>2</h3>\n        </div>\n        <div>\n          <h3>3</h3>\n        </div>\n        <div>\n          <h3>4</h3>\n        </div>\n        <div>\n          <h3>5</h3>\n        </div>\n        <div>\n          <h3>6</h3>\n        </div>\n      </Slider>\n      </div>\n\n      <div className=\"w100\">\n        <div style={{ marginVertical: \"10px\" }} className=\"bgOrange flex row wrap jcsa\">{forecastHourlyState}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}