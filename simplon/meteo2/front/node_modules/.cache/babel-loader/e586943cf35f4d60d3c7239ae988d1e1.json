{"ast":null,"code":"var _jsxFileName = \"/home/wsz/tem/src/components/FirebaseLogin.js\";\n// Import FirebaseAuth and firebase.\nimport React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase'; // Configure Firebase.\n\nconst config = {\n  apiKey: 'AIzaSyAeue-AsYu76MMQlTOM-KlbYBlusW9c1FM',\n  authDomain: 'myproject-1234.firebaseapp.com' // ...\n\n};\nfirebase.initializeApp(config);\n\nclass SignInScreen extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: false // Local signed-in state.\n\n    };\n    this.uiConfig = {\n      signInSuccessUrl: '<url-to-redirect-to-on-success>',\n      signInOptions: [//Leave the lines as is for the providers you want to offer your users.\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.FacebookAuthProvider.PROVIDER_ID, firebase.auth.TwitterAuthProvider.PROVIDER_ID, firebase.auth.GithubAuthProvider.PROVIDER_ID, firebase.auth.EmailAuthProvider.PROVIDER_ID, firebase.auth.PhoneAuthProvider.PROVIDER_ID, firebaseui.auth.AnonymousAuthProvider.PROVIDER_ID],\n      // tosUrl and privacyPolicyUrl accept either url string or a callback\n      // function.\n      // Terms of service url/callback.\n      tosUrl: '<your-tos-url>',\n      // Privacy policy url/callback.\n      privacyPolicyUrl: function () {\n        window.location.assign('<your-privacy-policy-url>');\n      }\n    };\n  }\n\n  // Listen to the Firebase Auth state and set the local state.\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => this.setState({\n      isSignedIn: !!user\n    }));\n  } // Make sure we un-register Firebase observers when the component unmounts.\n\n\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, \"My App\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, \"Please sign-in:\"), /*#__PURE__*/React.createElement(StyledFirebaseAuth, {\n        uiConfig: this.uiConfig,\n        firebaseAuth: firebase.auth(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \"My App\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"Welcome \", firebase.auth().currentUser.displayName, \"! You are now signed-in!\"), /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => firebase.auth().signOut(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \"Sign-out\"));\n  }\n\n}","map":{"version":3,"sources":["/home/wsz/tem/src/components/FirebaseLogin.js"],"names":["React","StyledFirebaseAuth","firebase","config","apiKey","authDomain","initializeApp","SignInScreen","Component","state","isSignedIn","uiConfig","signInSuccessUrl","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","TwitterAuthProvider","GithubAuthProvider","EmailAuthProvider","PhoneAuthProvider","firebaseui","AnonymousAuthProvider","tosUrl","privacyPolicyUrl","window","location","assign","componentDidMount","unregisterAuthObserver","onAuthStateChanged","user","setState","componentWillUnmount","render","currentUser","displayName","signOut"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAEA;;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,gCAFC,CAGb;;AAHa,CAAf;AAKAH,QAAQ,CAACI,aAAT,CAAuBH,MAAvB;;AAEA,MAAMI,YAAN,SAA2BP,KAAK,CAACQ,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAGzCC,KAHyC,GAGjC;AACNC,MAAAA,UAAU,EAAE,KADN,CACY;;AADZ,KAHiC;AAAA,SAQzCC,QARyC,GAQ9B;AACTC,MAAAA,gBAAgB,EAAE,iCADT;AAETC,MAAAA,aAAa,EAAE,CACb;AACAX,MAAAA,QAAQ,CAACY,IAAT,CAAcC,kBAAd,CAAiCC,WAFpB,EAGbd,QAAQ,CAACY,IAAT,CAAcG,oBAAd,CAAmCD,WAHtB,EAIbd,QAAQ,CAACY,IAAT,CAAcI,mBAAd,CAAkCF,WAJrB,EAKbd,QAAQ,CAACY,IAAT,CAAcK,kBAAd,CAAiCH,WALpB,EAMbd,QAAQ,CAACY,IAAT,CAAcM,iBAAd,CAAgCJ,WANnB,EAObd,QAAQ,CAACY,IAAT,CAAcO,iBAAd,CAAgCL,WAPnB,EAQbM,UAAU,CAACR,IAAX,CAAgBS,qBAAhB,CAAsCP,WARzB,CAFN;AAYT;AACA;AACA;AACAQ,MAAAA,MAAM,EAAE,gBAfC;AAgBT;AACAC,MAAAA,gBAAgB,EAAE,YAAY;AAC5BC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,2BAAvB;AACD;AAnBQ,KAR8B;AAAA;;AA8BzC;AACAC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,sBAAL,GAA8B5B,QAAQ,CAACY,IAAT,GAAgBiB,kBAAhB,CACzBC,IAAD,IAAU,KAAKC,QAAL,CAAc;AAACvB,MAAAA,UAAU,EAAE,CAAC,CAACsB;AAAf,KAAd,CADgB,CAA9B;AAGD,GAnCwC,CAqCzC;;;AACAE,EAAAA,oBAAoB,GAAG;AACrB,SAAKJ,sBAAL;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAK1B,KAAL,CAAWC,UAAhB,EAA4B;AAC1B,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,eAGE,oBAAC,kBAAD;AAAoB,QAAA,QAAQ,EAAE,KAAKC,QAAnC;AAA6C,QAAA,YAAY,EAAET,QAAQ,CAACY,IAAT,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD;;AACD,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYZ,QAAQ,CAACY,IAAT,GAAgBsB,WAAhB,CAA4BC,WAAxC,6BAFF,eAGE;AAAG,MAAA,OAAO,EAAE,MAAMnC,QAAQ,CAACY,IAAT,GAAgBwB,OAAhB,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF;AAOD;;AA3DwC","sourcesContent":["// Import FirebaseAuth and firebase.\nimport React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\n \n// Configure Firebase.\nconst config = {\n  apiKey: 'AIzaSyAeue-AsYu76MMQlTOM-KlbYBlusW9c1FM',\n  authDomain: 'myproject-1234.firebaseapp.com',\n  // ...\n};\nfirebase.initializeApp(config);\n \nclass SignInScreen extends React.Component {\n \n  // The component's Local state.\n  state = {\n    isSignedIn: false // Local signed-in state.\n  };\n \n  // Configure FirebaseUI.\n  uiConfig = {\n    signInSuccessUrl: '<url-to-redirect-to-on-success>',\n    signInOptions: [\n      //Leave the lines as is for the providers you want to offer your users.\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n      firebase.auth.GithubAuthProvider.PROVIDER_ID,\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      firebase.auth.PhoneAuthProvider.PROVIDER_ID,\n      firebaseui.auth.AnonymousAuthProvider.PROVIDER_ID\n    ],\n    // tosUrl and privacyPolicyUrl accept either url string or a callback\n    // function.\n    // Terms of service url/callback.\n    tosUrl: '<your-tos-url>',\n    // Privacy policy url/callback.\n    privacyPolicyUrl: function () {\n      window.location.assign('<your-privacy-policy-url>');\n    }\n  };\n \n  // Listen to the Firebase Auth state and set the local state.\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n        (user) => this.setState({isSignedIn: !!user})\n    );\n  }\n  \n  // Make sure we un-register Firebase observers when the component unmounts.\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n \n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <div>\n          <h1>My App</h1>\n          <p>Please sign-in:</p>\n          <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()}/>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <h1>My App</h1>\n        <p>Welcome {firebase.auth().currentUser.displayName}! You are now signed-in!</p>\n        <a onClick={() => firebase.auth().signOut()}>Sign-out</a>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}