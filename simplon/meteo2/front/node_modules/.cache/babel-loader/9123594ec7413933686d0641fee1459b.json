{"ast":null,"code":"var _jsxFileName = \"/home/wsz/meteo/src/components/Search.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport \"../App.css\";\nimport dayjs from \"dayjs\";\nimport kc from \"./kelvinToCelcius\";\nconst api = \"d929b80c2587abdc6dbda7f96c9ff6c5\";\n\nclass Weather {\n  constructor(temp, weather, date, icon) {\n    this.date = date;\n    this.temp = temp;\n    this.weather = weather;\n    this.icon = icon;\n  }\n\n}\n\nfunction Search(props) {\n  const [weather, setWeather] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [longitude, setLongitude] = useState(\"\");\n  const [latitude, setLatitude] = useState(\"\");\n  const [windSpeed, setWindSpeed] = useState(\"\");\n  const [temperature, setTemperature] = useState(\"\");\n  const [data, setData] = useState(\"\");\n  const [data2, setData2] = useState(\"\");\n  const [data3, setData3] = useState(\"\");\n  let forecastDaily = [];\n  let test = [];\n  let forecastHourly = [];\n\n  function keyPress(a) {\n    if (a.key === \"Enter\") {\n      const cityValue = a.target.value;\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityValue}&appid=${api}`).then(response => response.json()).then(data => {\n        setLocation(data.name);\n        setWeather(data.weather[0].main);\n        setLongitude(data.coord.lon);\n        setLatitude(data.coord.lat);\n        setTemperature(kc(data.main.temp));\n        setWindSpeed(data.wind.speed);\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${data.coord.lat}&lon=${data.coord.lon}&appid=${api}` //`https://api.openweathermap.org/data/2.5/onecall?lat=48.841430200000005&lon=2.296164933019397&appid=${api}`\n        ).then(response => response.json()).then(data => {\n          console.log(data); //      console.log(data.hourly);\n          //      console.log(data.daily);\n\n          let x = 0;\n          let y = 0;\n          data.daily.forEach(element => {\n            forecastDaily[x] = element.weather[0].main + \" \";\n            x++;\n          });\n          x = 0;\n          const date = new Date();\n          console.log(date.getDay());\n          data.daily.forEach(element => {\n            test[x] = new Weather(kc(element.temp.day), element.weather[0].main + \" \", dayjs().add(x, \"day\").format(\"dddd DD/MM\"), element.weather[0].icon);\n            x++;\n          });\n          setData3(test.map(a => /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }\n          }, a.date, \" / \", a.temp, \" / \", a.weather)));\n          console.log(test);\n          data.hourly.forEach(element => {\n            forecastHourly[y] = kc(element.temp) + \" \";\n            y++;\n          });\n          setData(forecastDaily);\n          setData2(forecastHourly);\n          console.log(test);\n          console.log(data3);\n        });\n      }).catch(error => {\n        console.log(\"error\");\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onKeyPress: keyPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bgYellow textBlack0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bgRed textWhite1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"Today\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \" Location : \", location), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"Weather : \", weather), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"Longitutde : \", longitude), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, \"Latitude : \", latitude), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"Temperature : \", temperature, \" *C\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"Wind Speed : \", windSpeed)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bgGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, \"Daily Forecast : \", data), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bgOrange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, \"Hourly Forecast : \", data2), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bgGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, data3), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bgOrange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, data2));\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/wsz/meteo/src/components/Search.js"],"names":["React","useState","dayjs","kc","api","Weather","constructor","temp","weather","date","icon","Search","props","setWeather","location","setLocation","longitude","setLongitude","latitude","setLatitude","windSpeed","setWindSpeed","temperature","setTemperature","data","setData","data2","setData2","data3","setData3","forecastDaily","test","forecastHourly","keyPress","a","key","cityValue","target","value","fetch","then","response","json","name","main","coord","lon","lat","wind","speed","console","log","x","y","daily","forEach","element","Date","getDay","day","add","format","map","hourly","catch","error"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport \"../App.css\";\nimport dayjs from \"dayjs\";\nimport kc from \"./kelvinToCelcius\";\n\nconst api = \"d929b80c2587abdc6dbda7f96c9ff6c5\";\n\nclass Weather {\n  constructor(temp, weather, date, icon) {\n    this.date = date;\n    this.temp = temp;\n    this.weather = weather;\n    this.icon = icon;\n  }\n}\n\nfunction Search(props) {\n  const [weather, setWeather] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [longitude, setLongitude] = useState(\"\");\n  const [latitude, setLatitude] = useState(\"\");\n  const [windSpeed, setWindSpeed] = useState(\"\");\n  const [temperature, setTemperature] = useState(\"\");\n  const [data, setData] = useState(\"\");\n  const [data2, setData2] = useState(\"\");\n  const [data3, setData3] = useState(\"\");\n\n  let forecastDaily = [];\n  let test = [];\n  let forecastHourly = [];\n\n  function keyPress(a) {\n    if (a.key === \"Enter\") {\n      const cityValue = a.target.value;\n\n      fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${cityValue}&appid=${api}`\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          setLocation(data.name);\n          setWeather(data.weather[0].main);\n          setLongitude(data.coord.lon);\n          setLatitude(data.coord.lat);\n          setTemperature(kc(data.main.temp));\n          setWindSpeed(data.wind.speed);\n\n          fetch(\n            `https://api.openweathermap.org/data/2.5/onecall?lat=${data.coord.lat}&lon=${data.coord.lon}&appid=${api}`\n            //`https://api.openweathermap.org/data/2.5/onecall?lat=48.841430200000005&lon=2.296164933019397&appid=${api}`\n          )\n            .then((response) => response.json())\n            .then((data) => {\n              console.log(data);\n              //      console.log(data.hourly);\n              //      console.log(data.daily);\n\n              let x = 0;\n              let y = 0;\n\n              data.daily.forEach((element) => {\n                forecastDaily[x] = element.weather[0].main + \" \";\n                x++;\n              });\n\n              x = 0;\n\n              const date = new Date();\n              console.log(date.getDay());\n\n              data.daily.forEach((element) => {\n                test[x] = new Weather(\n                  kc(element.temp.day),\n                  element.weather[0].main + \" \",\n                  dayjs().add(x, \"day\").format(\"dddd DD/MM\"),\n                  element.weather[0].icon\n                );\n                x++;\n              });\n\n              setData3(\n                test.map((a) => (\n                  <li>\n                    {a.date} / {a.temp} / {a.weather}\n                  </li>\n                ))\n              );\n\n              console.log(test);\n\n              data.hourly.forEach((element) => {\n                forecastHourly[y] = kc(element.temp) + \" \";\n                y++;\n              });\n\n              setData(forecastDaily);\n              setData2(forecastHourly);\n              console.log(test);\n              console.log(data3);\n            });\n        })\n\n        .catch((error) => {\n          console.log(\"error\");\n        });\n    }\n  }\n\n  return (\n    <div>\n      <input onKeyPress={keyPress} />\n\n      <div className=\"bgYellow textBlack0\">\n        <div className=\"bgRed textWhite1\">Today</div>\n        <div className=\"flex column\"> Location : {location}</div>\n        <div>Weather : {weather}</div>\n        <div>Longitutde : {longitude}</div>\n        <div>Latitude : {latitude}</div>\n        <div>Temperature : {temperature} *C</div>\n        <div>Wind Speed : {windSpeed}</div>\n      </div>\n      <div className=\"bgGreen\">Daily Forecast : {data}</div>\n      <div className=\"bgOrange\">Hourly Forecast : {data2}</div>\n\n      <div className=\"bgGreen\">{data3}</div>\n      <div className=\"bgOrange\">{data2}</div>\n    </div>\n  );\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}