{"ast":null,"code":"var _jsxFileName = \"/home/wsz/tem/front/src/components/FirebaseLogin.js\";\n// Import FirebaseAuth and firebase.\nimport React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase'; // Configure Firebase.\n// Configure Firebase.\n\nconst config = {\n  apiKey: \"AIzaSyA3Ic_xoVsarIqel7QDl4vWr5pAUWFclLM\",\n  authDomain: \"react-33622.firebaseapp.com\",\n  databaseURL: \"https://react-33622.firebaseio.com\",\n  projectId: \"react-33622\",\n  storageBucket: \"react-33622.appspot.com\",\n  messagingSenderId: \"820375977285\",\n  appId: \"1:820375977285:web:c5553caf632ba5ad8f122c\"\n};\nfirebase.initializeApp(config);\nexport default class SignInScreen extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: false // Local signed-in state.\n\n    };\n    this.uiConfig = {\n      // signInSuccessUrl: '<url-to-redirect-to-on-success>',\n      signInOptions: [//Leave the lines as is for the providers you want to offer your users.\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.EmailAuthProvider.PROVIDER_ID, firebase.auth.PhoneAuthProvider.PROVIDER_ID],\n      // tosUrl and privacyPolicyUrl accept either url string or a callback\n      // function.\n      // Terms of service url/callback.\n      tosUrl: '<your-tos-url>',\n      // Privacy policy url/callback.\n      privacyPolicyUrl: function () {\n        window.location.assign('<your-privacy-policy-url>');\n      }\n    };\n  }\n\n  // Listen to the Firebase Auth state and set the local state.\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => this.setState({\n      isSignedIn: !!user\n    }));\n  } // Make sure we un-register Firebase observers when the component unmounts.\n\n\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tac jcc aic flex column\",\n        style: {\n          paddingTop: \"150px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bgBlue textWhite1\",\n        style: {\n          padding: \"20px\",\n          borderRadius: \"9px\",\n          boxShadow: \"10px 5px 5px blue\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, \"Please sign-in\"), /*#__PURE__*/React.createElement(StyledFirebaseAuth, {\n        uiConfig: this.uiConfig,\n        firebaseAuth: firebase.auth(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, \"My App\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, \"Welcome \", firebase.auth().currentUser.displayName, \"! You are now signed-in!\"), /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => firebase.auth().signOut(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"Sign-out\"));\n  }\n\n}","map":{"version":3,"sources":["/home/wsz/tem/front/src/components/FirebaseLogin.js"],"names":["React","StyledFirebaseAuth","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","SignInScreen","Component","state","isSignedIn","uiConfig","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","PhoneAuthProvider","tosUrl","privacyPolicyUrl","window","location","assign","componentDidMount","unregisterAuthObserver","onAuthStateChanged","user","setState","componentWillUnmount","render","paddingTop","padding","borderRadius","boxShadow","currentUser","displayName","signOut"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAEA;AACA;;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,6BAFC;AAGbC,EAAAA,WAAW,EAAE,oCAHA;AAIbC,EAAAA,SAAS,EAAE,aAJE;AAKbC,EAAAA,aAAa,EAAE,yBALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE;AAPM,CAAf;AASAR,QAAQ,CAACS,aAAT,CAAuBR,MAAvB;AAEA,eAAe,MAAMS,YAAN,SAA2BZ,KAAK,CAACa,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAGxDC,KAHwD,GAGhD;AACNC,MAAAA,UAAU,EAAE,KADN,CACY;;AADZ,KAHgD;AAAA,SAQxDC,QARwD,GAQ7C;AAEV;AACCC,MAAAA,aAAa,EAAE,CACb;AACAf,MAAAA,QAAQ,CAACgB,IAAT,CAAcC,kBAAd,CAAiCC,WAFpB,EAGblB,QAAQ,CAACgB,IAAT,CAAcG,iBAAd,CAAgCD,WAHnB,EAIblB,QAAQ,CAACgB,IAAT,CAAcI,iBAAd,CAAgCF,WAJnB,CAHN;AAST;AACA;AACA;AACAG,MAAAA,MAAM,EAAE,gBAZC;AAaT;AACAC,MAAAA,gBAAgB,EAAE,YAAY;AAC5BC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,2BAAvB;AACD;AAhBQ,KAR6C;AAAA;;AA2BxD;AACAC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,sBAAL,GAA8B3B,QAAQ,CAACgB,IAAT,GAAgBY,kBAAhB,CACzBC,IAAD,IAAU,KAAKC,QAAL,CAAc;AAACjB,MAAAA,UAAU,EAAE,CAAC,CAACgB;AAAf,KAAd,CADgB,CAA9B;AAGD,GAhCuD,CAkCxD;;;AACAE,EAAAA,oBAAoB,GAAG;AACrB,SAAKJ,sBAAL;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKpB,KAAL,CAAWC,UAAhB,EAA4B;AAC1B,0BACE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAyC,QAAA,KAAK,EAAE;AAACoB,UAAAA,UAAU,EAAC;AAAZ,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE,MAAV;AAAkBC,UAAAA,YAAY,EAAE,KAAhC;AAAuCC,UAAAA,SAAS,EAAC;AAAjD,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,eAEA,oBAAC,kBAAD;AAAoB,QAAA,QAAQ,EAAE,KAAKtB,QAAnC;AAA6C,QAAA,YAAY,EAAEd,QAAQ,CAACgB,IAAT,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CAFF,CADF;AAUD;;AACD,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYhB,QAAQ,CAACgB,IAAT,GAAgBqB,WAAhB,CAA4BC,WAAxC,6BAFF,eAGE;AAAG,MAAA,OAAO,EAAE,MAAMtC,QAAQ,CAACgB,IAAT,GAAgBuB,OAAhB,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF;AAOD;;AA3DuD","sourcesContent":["// Import FirebaseAuth and firebase.\nimport React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\n \n// Configure Firebase.\n// Configure Firebase.\nconst config = {\n  apiKey: \"AIzaSyA3Ic_xoVsarIqel7QDl4vWr5pAUWFclLM\",\n  authDomain: \"react-33622.firebaseapp.com\",\n  databaseURL: \"https://react-33622.firebaseio.com\",\n  projectId: \"react-33622\",\n  storageBucket: \"react-33622.appspot.com\",\n  messagingSenderId: \"820375977285\",\n  appId: \"1:820375977285:web:c5553caf632ba5ad8f122c\"\n};\nfirebase.initializeApp(config);\n \nexport default class SignInScreen extends React.Component {\n \n  // The component's Local state.\n  state = {\n    isSignedIn: false // Local signed-in state.\n  };\n \n  // Configure FirebaseUI.\n  uiConfig = {\n  \n   // signInSuccessUrl: '<url-to-redirect-to-on-success>',\n    signInOptions: [\n      //Leave the lines as is for the providers you want to offer your users.\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      firebase.auth.PhoneAuthProvider.PROVIDER_ID,\n    ],\n    // tosUrl and privacyPolicyUrl accept either url string or a callback\n    // function.\n    // Terms of service url/callback.\n    tosUrl: '<your-tos-url>',\n    // Privacy policy url/callback.\n    privacyPolicyUrl: function () {\n      window.location.assign('<your-privacy-policy-url>');\n    }\n  };\n \n  // Listen to the Firebase Auth state and set the local state.\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n        (user) => this.setState({isSignedIn: !!user})\n    );\n  }\n  \n  // Make sure we un-register Firebase observers when the component unmounts.\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n \n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <div className=\"tac jcc aic flex column\" style={{paddingTop:\"150px\"}}>\n\n          <div className=\"bgBlue textWhite1\" style={{padding: \"20px\", borderRadius: \"9px\", boxShadow:\"10px 5px 5px blue\"}}>\n          <p>Please sign-in</p>\n          <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()}/>\n          </div>\n        </div>\n\n      );\n    }\n    return (\n      <div>\n        <h1>My App</h1>\n        <p>Welcome {firebase.auth().currentUser.displayName}! You are now signed-in!</p>\n        <a onClick={() => firebase.auth().signOut()}>Sign-out</a>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}