Hibernate on low battery level
If your battery sends events to udev whenever it (dis)charges by 1%, you can use this udev rule to automatically hibernate the system when battery level is critical, and thus prevent all unsaved work from being lost.

Note: Not all batteries report discharge events. Test by running udevadm monitor --property while on battery and see if any events are reported. You should wait at least 1% drop. If no events are reported and /sys/class/power_supply/BAT0/alarm is non-zero then the battery will likely trigger an event when BAT0/energy_now drops below the alarm value, and the udev rule will work as long as the percentage math works out. Some laptops have an option for this disabled in BIOS by default.
/etc/udev/rules.d/99-lowbat.rules
# Suspend the system when battery level drops to 5% or lower
SUBSYSTEM=="power_supply", ATTR{status}=="Discharging", ATTR{capacity}=="[0-5]", RUN+="/usr/bin/systemctl hibernate"
This rule will be repeated whenever the condition is set. As such, when resuming from hibernate when the battery is critical, the computer will hibernate directly. Some laptops do not boot beyond a certain battery level, so the rule could be adjusted accordingly.

Batteries can jump to a lower value instead of discharging continuously, therefore a udev string matching pattern for all capacities 0 through 5 is used.

Other rules can be added to perform different actions depending on power supply status and/or capacity.

If your system has no or missing ACPI events, use cron with the following script which uses acpi:

#!/bin/sh
acpi -b | awk -F'[,:%]' '{print $2, $3}' | {
        read -r status capacity

                if [ "$status" = Discharging -a "$capacity" -lt 5 ]; then
                            logger "Critical battery threshold"
                                        systemctl hibernate
                                            fi
}
If you have more than one battery or if you are using a battery powered peripheral device, you should modify the second line of the script by adding grep to monitor the correct battery like so: acpi -b | grep "Battery 0" | awk -F'[,:%]' '{print $2, $3}' | {. Replace Battery 0 with your required battery as reported by acpi -b.

    Note: Unplugging a battery or peripheral device may break your script since it can cause remaining batteries to be renamed, i.e. when Battery 0 is unplugged, Battery 1 becomes Battery 0 automatically, and so on.
